function Ball(game) {
  this.directions = [1, -1];
  this.speed = 6;
  this.width = 10;
  this.height = 10;
  this.coords = {
    x: 400,
    y: 300,
    xd: 0,
    yd: 0
  }

  this.game = game;
  this.stop = false;
}

Ball.prototype.startDirection = function () {
  var that = this;
  return that.directions[Math.floor((Math.random() * that.directions.length))];
}

Ball.prototype.start = function () {
  var that = this;
  var startDirection = that.directions[Math.floor((Math.random() * that.directions.length))];
  that.coords.xd = startDirection;
  var ballStart = setInterval(
    function() {
      
      that.update(); 
      if(that.stop) {
        clearInterval(ballStart);
      }
    }, 1000/75);
}

Ball.prototype.stop = function () {
  this.stop = true;
}

Ball.prototype.update = function () {
  this.coords.x -= this.speed * this.coords.xd;

  if (this.coords.x < 0 || this.coords.x > 800 - this.width) {

      if (this.coords.x < 0) {
          this.game.broadcast('score','right');
      } else if (this.coords.x > 800 - this.width) {
          this.game.broadcast('score','left');
      }
      this.stop = true;
      this.game.gameStarted = false;
      this.coords.xd = 0;
      this.coords.yd = 0;
      this.coords.x = 800 / 2;
      this.coords.y = 600 / 2;
  }

  this.coords.y -= this.coords.yd;

  if (this.coords.y < 0 || this.coords.y > 600 - this.width) {
      this.coords.yd = this.coords.yd * -1;
  }

  this.handleCollision();

  this.game.broadcast('ballmove', this.coords);
}

Ball.prototype.collides = function (player, ball) {
  var ballX = ball.coords.x;
  var ballY = ball.coords.y;
  var playerX = player.side === 'left' ? player.offset.x : (800 - player.offset.x - player.width);
  var playerY = player.offset.y;

  return [playerX < ballX + ball.width && playerX + player.width > ballX && playerY < ballY + ball.height && playerY + player.height > ballY, ((playerY + player.height/2) - (ballY + ball.height))];

}

Ball.prototype.handleCollision = function () {
  var that = this;
  var collition_data;

  Object.keys(that.game.players).forEach(function (key) {
    collition_data = that.collides(that.game.players[key], that);
    if (collition_data[0]) {
        that.coords.xd = that.coords.xd * -1;
        that.coords.yd = collition_data[1] / 10;
    }
  });
  return true;
}

module.exports = Ball;